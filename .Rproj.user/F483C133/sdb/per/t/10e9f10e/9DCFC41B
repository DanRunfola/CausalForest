{
    "collab_server" : "3873",
    "contents" : "import os\nimport sys\nsys.path.append(\"/home/aiddata/Desktop/Github/CausalForest/scikit-learn\")\nsys.path.insert(0,\"/home/aiddata/miniconda2/lib/python2.7/site-packages/\")\n\nprint(sys.path)\n\nfrom sklearn import tree\nimport csv\nimport numpy as np \n\nprint(str(sys.argv))\n \nX = np.genfromtxt(\"/home/aiddata/Desktop/Github/GEF/Robustness/RandomForests/GEF_Frag_RFdata.csv\", dtype=None, delimiter=',',usecols=range(1,30)) \ny = np.genfromtxt(\"/home/aiddata/Desktop/Github/GEF/Robustness/RandomForests/GEF_Frag_RFdata.csv\", dtype=None, delimiter=',', names=True,usecols=\"outcome\")\nsample_weight = np.genfromtxt(\"/home/aiddata/Desktop/Github/GEF/Robustness/RandomForests/GEF_Frag_RFdata.csv\", dtype=None, delimiter=',', names=True,usecols=\"distance\")\n\n\n\n# \n# \n# names = X[0]\n# x = np.delete(X, (0), axis=0)\n# row_num = X.shape[0]\n# col_num = X.shape[1]\n# feature_num_ratio = 0.8\n# forest_size = 1000\n# res = [0]*len(y)\n# feature_importance = [0]*col_num\n# \n# \n# def featureImpCal(tree, feature_importance):\n# \tleft = tree.tree_.children_left\n# \tright = tree.tree_.children_right\n# \tfeatures = tree.tree_.feature\n# \tvalue = tree.tree_.impurity\n# \tfor nodeid in range(0,len(left)):\n# \t\tif features[nodeid] >= 0:\n# \t\t\tfeature_importance[features[nodeid]] += value[nodeid] - value[left[nodeid]] - value[right[nodeid]]\n# \t\t\n# resultFile = open(\"/home/aiddata/Desktop/Github/GEF/Robustness/RandomForests/GEF_Frag_RobustnessResults.csv\",'wb')\n# wr = csv.writer(resultFile, delimiter=',')\n# \t\n# \n# for i in range(0,forest_size):\n# \tprint(i)\n# \tres = [0]*len(y)\n# \tidx = np.random.randint(row_num-1,size = int(0.8*row_num))\n# \tmodel = tree.DecisionTreeRegressor(criterion='ct', splitter='random',max_features = feature_num_ratio,min_samples_leaf = 100, overlap_samples=0.2)\n# \tfitres = model.fit(x[idx],y[idx],sample_weight[idx])\n# \n# \tpred = model.predict(x[idx])\n# \tfor j in range(0,len(idx)):\n# \t\tres[idx[j]] = pred[j]\n# \twr.writerow(res)\n# \n# \tfeatureImpCal(model, feature_importance)\n# \n# s = feature_importance\n# idx = sorted(range(len(s)), key=lambda k: s[k],reverse=True)\n# names[idx]\n# \n# \n# impurity_res = [0]*col_num\n# for i in range(0,col_num):\n# \timpurity_res[i] = s[idx[i]]\n# \n# r2 = zip(names[idx],impurity_res)\n# \n# \n# \n",
    "created" : 1479315276979.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "708229218",
    "id" : "9DCFC41B",
    "lastKnownWriteTime" : 1479315547,
    "last_content_update" : 1479315547192,
    "path" : "~/Desktop/Github/CausalForest/CF.py",
    "project_path" : "CF.py",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "python"
}