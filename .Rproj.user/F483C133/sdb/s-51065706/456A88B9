{
    "collab_server" : "",
    "contents" : "#Install older versions of libraries for R Server:\n#library(devtools)\n\n#GEF MFA\n\n#Libraries\nlibrary(sp)\nlibrary(ggplot2)\nlibrary(rgdal)\nlibrary(spatstat)\nlibrary(maptools)\nlibrary(rgeos)\nlibrary(geojsonio)\nlibrary(MatchIt)\nlibrary(rpart)\nlibrary(Rcpp)\nlibrary(doBy)\nsourceCpp(\"/home/aiddata/Desktop/Github/GEF_MFA/Analyses/split.cpp\")\n\n#Functions\nsource(\"/home/aiddata/Desktop/Github/GEF_MFA/data_processing/MFA_data_functions.R\")\nsource(\"/home/aiddata/Desktop/Github/GEF_MFA/data_processing/MFA_buffers.R\")\nsource(\"/home/aiddata/Desktop/Github/GEF_MFA/data_processing/MFA_buffers_t.R\")\nsource(\"/home/aiddata/Desktop/Github/GEF_MFA/Visualization/viz.R\")\nsource(\"/home/aiddata/Desktop/Github/GEF_MFA/Analyses/CT_ForestCover.R\")\nsource(\"/home/aiddata/Desktop/Github/GEF_MFA/Analyses/CT_NDVI.R\")\nsource(\"/home/aiddata/Desktop/Github/GEF_MFA/Analyses/causal_tree_functions.R\")\nsource(\"/home/aiddata/Desktop/Github/GEF_MFA/Analyses/descriptives.R\")\nsource(\"/home/aiddata/Desktop/Github/GEF_MFA/Analyses/spatial_descriptives.R\")\nsource(\"/home/aiddata/Desktop/Github/GEF_MFA/Analyses/causal_forest.R\")\nsource(\"/home/aiddata/Desktop/Github/GEF_MFA/Analyses/balance_contrast.R\")\nsource(\"/home/aiddata/Desktop/Github/GEF_MFA/io.R\")\n\n\n#Data files\ngef.source <- \"/home/aiddata/Desktop/Github/GEF_MFA/data/gef_projects_160726.csv\"\ngef.mfa.eval.CD <- \"/home/aiddata/Desktop/Github/GEF_MFA/data/CD_MFA_CD_projects_sheet.csv\"\ngef.mfa.eval.MFA <- \"/home/aiddata/Desktop/Github/GEF_MFA/data/CD_MFA_MFA_projects_sheet.csv\" \ngef.aiddata.ancillary <- \"/home/aiddata/Desktop/Github/GEF_MFA/data/GEF_MFA_AidData_Ancillary.csv\"\ngef.aiddata.locations <- \"/home/aiddata/Desktop/Github/GEF_MFA/data/location__1_2016-10-31-11-33.csv\"\ngef.aiddata.projects<- \"/home/aiddata/Desktop/Github/GEF_MFA/data/project__1_2016-10-31-11-33.csv\"\ngef.ld.projects <- \"/home/aiddata/Desktop/Github/GEF_MFA/data/LD.geojson\"\ngef.ld.ancil <- \"/home/aiddata/Desktop/Github/GEF_MFA/data/GlobalEnvironmentFacility_GeocodedResearchRelease_Level1_v1.0/data/projects_ancillary.csv\"\n\nmfa.project.locations <- gen.gef.mfa(gef.source, gef.mfa.eval.CD, gef.mfa.eval.MFA,\n                                     gef.aiddata.locations, gef.aiddata.projects,\n                                     gef.aiddata.ancillary)\n\n#Join satellite data in to MFA projects\nmfa.dta <- read.csv(\"/home/aiddata/Desktop/Github/GEF_MFA/generated_data/merge_10km_buffer_treatments.csv\")\nmfa.project.locations$id <- row.names(mfa.project.locations)\nmfa.full.dtaA <- merge(mfa.project.locations, mfa.dta, by.x=\"id\", by.y=\"id\")\n\n#Remove course-resolution data.\nmfa.full.dtaB <- geofilter.mfa(mfa.full.dtaA )\n\n#Filter MFA projects to only be those similar to LD.\nmfa.full.dta <- filter.mfa(mfa.full.dtaB)\n  \n#Generate LD location information for use in comparison.\nld.project.locations <- prep.ld(ld = gef.ld.projects, \n                                ld.ancil = gef.ld.ancil)\n\n#Define control and treatment binary\nld.project.locations$treatment = 0\nmfa.full.dta$treatment = 1\n\n#Prep both dataframes for integration\nnames(mfa.full.dta)[names(mfa.full.dta) == \"Longitude\"] <- \"longitude\"\nnames(mfa.full.dta)[names(mfa.full.dta) == \"Latitude\"] <- \"latitude\"\nld.merge <- ld.project.locations@data[,names(ld.project.locations) %in% names(mfa.full.dta)]\nmfa.merge <- mfa.full.dta[,names(mfa.full.dta) %in% names(ld.merge)]\n\n#Join into analysis dataframe\nfull.dta <- rbind(ld.merge, mfa.merge)\n\n#Define control variables\nVars <-  c(\"dist_to_all_rivers.na.mean\", \"dist_to_roads.na.mean\",\n           \"srtm_elevation_500m.na.mean\", \"srtm_slope_500m.na.mean\",\n           \"accessibility_map.na.mean\", \"gpw_v3_density.2000.mean\",\n           \"wdpa_5km.na.sum\", \"treecover2000.na.mean\", \"latitude\",\n           \"longitude\", \"udel_precip_v4_01_yearly_max.2002.mean\", \n           \"udel_precip_v4_01_yearly_min.2002.mean\", \n           \"udel_precip_v4_01_yearly_mean.2002.mean\",\n           \"udel_air_temp_v4_01_yearly_max.2002.mean\",   \n           \"udel_air_temp_v4_01_yearly_min.2002.mean\",   \n           \"udel_air_temp_v4_01_yearly_mean.2002.mean\",\n           \"v4composites_calibrated.2002.mean\",\n           \"ltdr_yearly_ndvi_mean.2002.mean\")\n\nVarNames <- c(\"Distance to Rivers (m)\", \"Distance to Roads (m)\",\n                       \"Elevation(m)\", \"Slope (Â°)\",\n                       \"Urban Travel Distance (relative)\", \"Population Density (2000)\",\n                       \"Protected Area %\", \"Treecover (2000, %)\", \"Latitude\",\n                       \"Longitude\", \"Maximum Precipitation (2002, mm)\", \n                       \"Minimum Precipitation (2002, mm)\", \n                       \"Mean Precipitation (2002, mm)\",\n                       \"Maximum Temperature (2002, C)\", \n                       \"Minimum Temperature (2002, C)\", \n                       \"Mean Temperature (2002, C)\",\n                       \"Nightime Lights (2002, Relative)\",\n                       \"NDVI (2002, Unitless)\"                       \n              )\n\nout_path = \"/home/aiddata/Desktop/Github/GEF_MFA/generalized_tests/\"\n\nsource(\"/home/aiddata/Desktop/Github/GEF_MFA/generalized/io.R\")\ngeoSuite(dta=full.dta, \n         trt=c(\"treatment\", \"GEF MFA Projects\"), \n         ctrl=c(Vars, VarNames), \n         outcome=c(\"ltdr_yearly_ndvi_mean.2013.mean\", \"2013 NDVI\"), \n         pth=out_path, \n         file.prefix=\"NDVI_max\", \n         kvar=c(\"pre_average_NTL\",\"dist_to_roads.na.mean\",\"accessibility_map.na.mean\",\"srtm_slope_500m.na.mean\"),\n         title.desc = \"GEF MFA Projects vs. No Projects\",\n         geog.fields = c(\"latitude\", \"longitude\")\n         )\n\n\n\n\n\n\n\n\n\n\n\n\n\n#--------------------\n\n#Produce descriptive information\nyear.range(full.dta)\n\nlength(read.csv(gef.aiddata.projects)[,1]) #Geocodable Projects\nlength(read.csv(gef.aiddata.locations)[,1]) #Project Locations\nlength(mfa.full.dtaB) #High PC locations\n\n\n\nall.projects <- read.csv(gef.source)\nsummary(as.numeric(gsub(\",\",\"\",as.character(all.projects$Cofinance.CEO.endorse.stage)))) #Total Cofinancing\nsummary(as.numeric(gsub(\",\",\"\",as.character(all.projects$GEF.Project.Grant.CEO.endorse.stage)))) #Total GEF Project Funds\ntotal <- as.numeric(gsub(\",\",\"\",as.character(all.projects$Cofinance.CEO.endorse.stage))) +  \n  as.numeric(gsub(\",\",\"\",as.character(all.projects$GEF.Project.Grant.CEO.endorse.stage)))\nsummary(total) #Overall Total\nsummary(as.numeric(gsub(\",\",\"\",as.character(all.projects$Cofinance.CEO.endorse.stage))) / total) #Co-financing to Total\n\ncofinancing <- as.numeric(gsub(\",\",\"\",as.character(all.projects$Cofinance.CEO.endorse.stage))) / total\n\n\nall.projects.mfa <- all.projects[all.projects$Focal.Area.single.letter.code==\"M\",]\nsummary(as.numeric(gsub(\",\",\"\",as.character(all.projects.mfa$Cofinance.CEO.endorse.stage)))) #Total Cofinancing\nsummary(as.numeric(gsub(\",\",\"\",as.character(all.projects.mfa$GEF.Project.Grant.CEO.endorse.stage)))) #Total GEF Project Funds\ntotal.mfa <- as.numeric(gsub(\",\",\"\",as.character(all.projects.mfa$Cofinance.CEO.endorse.stage))) +  \n  as.numeric(gsub(\",\",\"\",as.character(all.projects.mfa$GEF.Project.Grant.CEO.endorse.stage)))\nsummary(total) #Overall Total\nsummary(as.numeric(gsub(\",\",\"\",as.character(all.projects.mfa$Cofinance.CEO.endorse.stage))) / total.mfa) #Co-financing to Total\n\n\n\ntotal.h <- as.numeric(gsub(\",\",\"\",as.character(all.projects[all.projects$Focal.Area.single.letter.code==\"M\",]$Cofinance.CEO.endorse.stage))) +  \n  as.numeric(gsub(\",\",\"\",as.character(all.projects[all.projects$Focal.Area.single.letter.code==\"M\",]$GEF.Project.Grant.CEO.endorse.stage)))\ncofinancing.mfa <- as.numeric(gsub(\",\",\"\",as.character(all.projects[all.projects$Focal.Area.single.letter.code==\"M\",]$Cofinance.CEO.endorse.stage))) / total.h\n\n\nhist(cofinancing.mfa, main=\"Cofinancing of GEF MFA projects\\n% of Project Cofinanced (out of total)\", xlab=\"Cofinancing\")\n\n#----------- ALl projects\nall.projects$cofinancing <- cofinancing \nall.projects$total <- total\nall.projects$GEF <- as.numeric(gsub(\",\",\"\",as.character(all.projects$GEF.Project.Grant.CEO.endorse.stage)))\nall.projects$cofinance <- as.numeric(gsub(\",\",\"\",as.character(all.projects$Cofinance.CEO.endorse.stage)))\n#Calculate years for over-time descriptives\nall.projectsA <- all.projects[!is.na(all.projects$Actual.date.of.implementation.start),]\nall.projectsB <- all.projectsA[!(as.character(all.projectsA$Actual.date.of.implementation.start) == \"\"),]\nall.projectsB$start.date <- as.Date(all.projectsB$Actual.date.of.implementation.start, format=\"%d-%b-%y\")\nall.projectsB$year <- as.numeric( format( all.projectsB$start.date, '%Y'))\nall.projectsC <- all.projectsB[!is.na(all.projectsB$total),]\n\n#Summarize by year\nlayout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))\ntot.sum <- summaryBy(total ~ year, data = all.projectsC)\nplot(tot.sum$year, tot.sum$total.mean, ylab=\"Average Total Dollar Value (USD)\",\n     xlab = \"Year\")\nabline(lm(total.mean ~ year, data=tot.sum))\n\nco.sum <- summaryBy(cofinancing ~ year, data = all.projectsC)\nplot(co.sum$year, co.sum$cofinancing.mean, ylab=\"Cofinancing Ratio\",\n     xlab = \"Year\")\nabline(lm(cofinancing.mean ~ year, data=co.sum))\n\ngef.sum <- summaryBy(GEF ~ year, data = all.projectsC)\nplot(gef.sum$year, gef.sum$GEF.mean, ylab=\"GEF Direct Contribution (USD)\",\n     xlab = \"Year\")\nabline(lm(GEF.mean ~ year, data=gef.sum))\n\n#------------- MFA Projects\nall.projects.mfa$cofinancing <- cofinancing.mfa\nall.projects.mfa$total <- total.h\nall.projects.mfa$GEF <- as.numeric(gsub(\",\",\"\",as.character(all.projects.mfa$GEF.Project.Grant.CEO.endorse.stage)))\nall.projects.mfa$cofinance <- as.numeric(gsub(\",\",\"\",as.character(all.projects.mfa$Cofinance.CEO.endorse.stage)))\n#Calculate years for over-time descriptives\nall.projectsA.mfa <- all.projects.mfa[!is.na(all.projects.mfa$Actual.date.of.implementation.start),]\nall.projectsB.mfa <- all.projectsA.mfa[!(as.character(all.projectsA.mfa$Actual.date.of.implementation.start) == \"\"),]\nall.projectsB.mfa$start.date <- as.Date(all.projectsB.mfa$Actual.date.of.implementation.start, format=\"%d-%b-%y\")\nall.projectsB.mfa$year <- as.numeric( format( all.projectsB.mfa$start.date, '%Y'))\nall.projectsC.mfa <- all.projectsB.mfa[!is.na(all.projectsB.mfa$total),]\n\n#Summarize by year\nlayout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))\ntot.sum.mfa <- summaryBy(total ~ year, data = all.projectsC.mfa)\nplot(tot.sum.mfa$year, tot.sum.mfa$total.mean, ylab=\"Average Total Dollar Value of MFA Projects (USD)\",\n     xlab = \"Year\")\n#abline(lm(total.mean ~ year, data=tot.sum.mfa))\n\nco.sum.mfa <- summaryBy(cofinancing ~ year, data = all.projectsC.mfa)\nplot(co.sum.mfa$year, co.sum.mfa$cofinancing.mean, ylab=\"Cofinancing Ratio of MFA Projects\",\n     xlab = \"Year\")\n#abline(lm(cofinancing.mean ~ year, data=co.sum.mfa))\n\ngef.sum.mfa <- summaryBy(GEF ~ year, data = all.projectsC.mfa)\nplot(gef.sum.mfa$year, gef.sum.mfa$GEF.mean, ylab=\"GEF Direct Contribution (USD)\",\n     xlab = \"Year\")\n#abline(lm(GEF.mean ~ year, data=gef.sum.mfa))\n\n#Location-based descriptives\nfull.mfa.dta <- full.dta[full.dta$Focal.Area.single.letter.code==\"M\",]\nsp.desc(full.mfa.dta)\n\n#Prep data for final CTs\ntotal <- as.numeric(gsub(\",\",\"\",as.character(full.dta$Cofinance.CEO.endorse.stage))) +  \n  as.numeric(gsub(\",\",\"\",as.character(full.dta$GEF.Project.Grant.CEO.endorse.stage)))\ncofinancing <- as.numeric(gsub(\",\",\"\",as.character(full.dta$Cofinance.CEO.endorse.stage))) / total\nfull.dta$cofinancing.ratio <- cofinancing \nfull.dta$total.funding <- total\nfull.dta$GEF.funding <- as.numeric(gsub(\",\",\"\",as.character(full.dta$GEF.Project.Grant.CEO.endorse.stage)))\nfull.dta$cofinance.funding <- as.numeric(gsub(\",\",\"\",as.character(full.dta$Cofinance.CEO.endorse.stage)))\n\n\n\n#Contrast matching balance for this T definition\nm.ret <- balance.contrast(full.dta)\nmatched.dta.covbalance <- match.data(m.ret)\nmatched.dta.covbalance$Type <- \"M\"\nmatched.dta.covbalance$Type[matched.dta.covbalance$treatment == 0] <- \"L\"\n\n#All\nplot.dta <- temp.sum(full.dta)\nplot.dta$propensity <- predict(m.ret$model, newdata=plot.dta, type=\"response\")\nplot.dta$Type <- plot.dta$Focal.Area.single.letter.code\n\na0 <- ggplot(data=plot.dta, aes(x=propensity,fill=Type)) + geom_histogram(binwidth=.05, alpha=.5, position=\"identity\")+ ggtitle(\"Pre-Balance Metrics (All LD SFA & MFA)\")#+ geom_density(alpha=0.2, aes(y=..scaled..)) + ggtitle(\"Pre-Balance Metrics (All LD SFA & MFA)\")  + ylab(\"\")  \n\na1 <- ggplot(data=plot.dta, aes(x=total.funding,fill=Type)) + geom_histogram(binwidth=5000000, alpha=.5, position=\"identity\")+ ylab(\"\")#+ geom_density(alpha=0.2, aes(y=..scaled..)) + ylab(\"\")  \n\na2 <- ggplot(data=plot.dta, aes(x=cofinance.funding,fill=Type)) +  geom_histogram(binwidth=5000000, alpha=.5, position=\"identity\")+ ylab(\"\")#+ geom_density(alpha=0.2, aes(y=..scaled..)) + ylab(\"\") \n\na3 <- ggplot(data=plot.dta, aes(x=GEF.funding,fill=Type))+ geom_histogram(binwidth=500000, alpha=.5, position=\"identity\")+ ylab(\"\")# + geom_density(alpha=0.2, aes(y=..scaled..)) + ylab(\"\") \n\na4 <- ggplot(data=plot.dta, aes(x=cofinancing.ratio,fill=Type)) + geom_histogram(binwidth=.05, alpha=.5, position=\"identity\") + ylab(\"\")#+ geom_density(alpha=0.2, aes(y=..scaled..)) + ylab(\"\")  \n\nmultiplot(a0,a1, a2, a3, a4, layout=matrix(c(1,1,2,3,4,5), nrow=3, byrow=TRUE))\n\n\n#Matched\nmatched.dta.covbalance$propensity <- matched.dta.covbalance$distance\nm0 <- ggplot(data=matched.dta.covbalance, aes(x=propensity,fill=Type)) + geom_histogram(binwidth=.05, alpha=.5, position=\"identity\")+ ggtitle(\"Post-Balance Metrics (All LD SFA & MFA)\") #+ geom_density(alpha=0.2, aes(y=..scaled..)) \n\nm1 <- ggplot(data=matched.dta.covbalance, aes(x=total.funding,fill=Type)) + geom_histogram(binwidth=5000000, alpha=.5, position=\"identity\")+ ylab(\"\")  #+ geom_density(alpha=0.2, aes(y=..scaled..)) \n\nm2 <- ggplot(data=matched.dta.covbalance, aes(x=cofinance.funding,fill=Type)) +  geom_histogram(binwidth=5000000, alpha=.5, position=\"identity\")+ ylab(\"\") #geom_density(alpha=0.2, aes(y=..scaled..)) \n\nm3 <- ggplot(data=matched.dta.covbalance, aes(x=GEF.funding,fill=Type)) + geom_histogram(binwidth=500000, alpha=.5, position=\"identity\")+ ylab(\"\") #geom_density(alpha=0.2, aes(y=..hist..)) \n\nm4 <- ggplot(data=matched.dta.covbalance, aes(x=cofinancing.ratio,fill=Type)) + geom_histogram(binwidth=.05, alpha=.5, position=\"identity\") + ylab(\"\") #+ geom_density(alpha=0.2, aes(y=..scaled..))  \n\nmultiplot(m0 ,m1, m2, m3, m4, layout=matrix(c(1,1,2,3,4,5), nrow=3, byrow=TRUE))\n\n#Produce the Causal Trees\n#First one - default treatment definition - MFA LD vs. LD SFA\nforestCover.MFA_LD.CT <- CT.ForestCover(full.dta)\nplot.tree.forestCover(forestCover.MFA_LD.CT, \n                      m.title = \"Forest Cover Loss - All MultiFocal LD vs. All SingleFocal LD\", \n                      outfile = \"/home/aiddata/Desktop/Github/GEF_MFA/Visualization/AllLDvsAllMFA_LandCover.png\")\n\n\n\nNDVI.MFA_LD.CT <- CT.NDVI(full.dta)\nplot.tree.NDVI(NDVI.MFA_LD.CT, \n               m.title = \"Change in NDVI - All MultiFocal LD vs. All SingleFocal LD\",\n               outfile = \"/home/aiddata/Desktop/Github/GEF_MFA/Visualization/AllLDvsAllMFA_NDVI.png\")\n                         \n#CF\nfull.dta.cf <- temp.sum(full.dta)\nc.vars <-  c(\"pre_average_NTL\",\n           \"pre_average_LTDR\", \"pre_max_LTDR\", \"pre_min_temp\", \"pre_max_temp\",\n           \"pre_average_temp\", \"pre_max_precip\", \"pre_min_precip\", \n           \"pre_average_precip\", \"post_implementation_time\", \"year\",\n           \"dist_to_all_rivers.na.mean\", \"dist_to_roads.na.mean\",\n           \"srtm_elevation_500m.na.mean\", \"srtm_slope_500m.na.mean\",\n           \"accessibility_map.na.mean\", \"gpw_v3_density.2000.mean\",\n           \"wdpa_5km.na.sum\", \"treecover2000.na.mean\",\"latitude\",\n           \"longitude\", \"udel_precip_v4_01_yearly_max.2002.mean\", \n           \"udel_precip_v4_01_yearly_min.2002.mean\", \n           \"udel_precip_v4_01_yearly_mean.2002.mean\",\n           \"udel_air_temp_v4_01_yearly_max.2002.mean\",   \n           \"udel_air_temp_v4_01_yearly_min.2002.mean\",   \n           \"udel_air_temp_v4_01_yearly_mean.2002.mean\",\n           \"v4composites_calibrated.2002.mean\",\n           \"ltdr_yearly_ndvi_mean.2002.mean\", \"GEF.replenishment.phase\",\n           \"Lead.agency\", \"cofinance.funding\", \"GEF.funding\",\n           \"total.funding\", \"cofinancing.ratio\")\no.var <- \"LTDR_outcome_max\"\nt.var <- \"treatment\"\n\nfull.dta.cf.all <- temp.sum(full.dta.cf)\nfull.dta.cf.sub <- full.dta.cf.all[c(c.vars, o.var,t.var)]\n\nsource(\"/home/aiddata/Desktop/Github/GEF_MFA/Analyses/causal_forest.R\")\nforestCover.MFA_LD.CF <- causal.forest(full.dta.cf.sub, c.vars, o.var, t.var, \"/home/aiddata/Desktop/Github/GEF_MFA/Analyses/test.csv\")\n\n\n\n\n#--- Predictive Statistics - MFA vs. SFA\n#Add various outcome datapoints to dataframe\nfull.dta.out <- temp.sum(full.dta)\nfull.dta.out$NDVI.Impact <- predict(forestCover.MFA_LD.CT, newdata = full.dta.out[full.dta.out$Focal.Area.single.letter.code==\"M\",])\n\nfull.dta.out <- temp.sum(full.dta)\nfull.dta.out$NDVI.Impact <- predict(forestCover.MFA_LD.CT, newdata = full.dta.out[full.dta.out$Focal.Area.single.letter.code==\"M\",])\n\n",
    "created" : 1480700386029.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4100370108",
    "id" : "456A88B9",
    "lastKnownWriteTime" : 1480703884,
    "last_content_update" : 1480703884907,
    "path" : "~/Desktop/Github/GEF_MFA/main_generalized.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}